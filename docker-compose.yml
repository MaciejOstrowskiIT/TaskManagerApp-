version: "3.8"
services:

  user-service-tma:
    container_name: user-service-tma
    build:
      context: ./user-service-tma/
      target: base
      dockerfile: ./docker/Dockerfile
    environment:
      - MONGO_URL=mongodb://database-mongo-tma:27017/
      - PORT=4051
      - TOKEN=TOKEN
      - DEV=1
      - COLLECTION_NAME=users
    command: npm run server
    volumes:
      - ./user-service-tma:/workspace/user-service-tma/
    ports:
      - "4051:4051"
    entrypoint:
      ["/bin/sh", "-c", "./bin/dev-entrypoint.sh && tail -f /dev/null"]


  user-details-service-tma:
    container_name: user-details-service-tma
    build:
      context: ./user-details-service-tma/
      target: base
      dockerfile: ./docker/Dockerfile
    environment:
      - MONGO_URL=mongodb://database-mongo-tma:27017/
      - PORT=4052
      - TOKEN=TOKEN
      - DEV=1
      - COLLECTION_NAME=users
    command: npm run server
    volumes:
      - ./user-details-service-tma:/workspace/user-details-service-tma/
    ports:
      - "4052:4052"
    entrypoint:
      ["/bin/sh", "-c", "./bin/dev-entrypoint.sh && tail -f /dev/null"]


  task-service-tma:
    container_name: task-service-tma
    build:
      context: ./task-service-tma/
      target: base
      dockerfile: ./docker/Dockerfile
    environment:
      - MONGO_URL=mongodb://database-mongo-tma:27017/
      - PORT=4053
      - TOKEN=TOKEN
      - DEV=1
      - COLLECTION_NAME=tasks
    command: npm run server
    volumes:
      - ./task-service-tma:/workspace/task-service-tma/
    ports:
      - "4053:4053"
    entrypoint:
      ["/bin/sh", "-c", "./bin/dev-entrypoint.sh && tail -f /dev/null"]


  database-mongo-tma:
    image: mongo
    container_name: database-mongo-tma
    restart: unless-stopped
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend-tma:
    container_name: frontend-tma
    build:
      context: ./frontend-tma/
      target: base
      dockerfile: ./docker/Dockerfile
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run start
    volumes:
      - ./frontend-tma:/workspace/frontend-tma/:rw
    ports:
      - "3000:3000"
    entrypoint: ["/bin/sh", "-c", "./bin/dev-entrypoint.sh && tail -f /dev/null"]

networks:
  my-network:
    driver: bridge
